#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('22 01 * * *')]),
  parameters([
          string(name: 'URL_TO_TEST', defaultValue: 'http://am-org-role-mapping-service-aat.service.core-compute-aat.internal',
                  description: 'The URL you want to run these tests against'),
          string(name: 'SecurityRules',
                  defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                  description: 'The URL you want to run these tests against'),
])
  ])
@Library("Infrastructure")

def type = "java"
def product = "am"
def component = "org-role-mapping-service"

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def vaultOverrides = [
  'preview' : 'aat',
  'spreview': 'saat'
]

def secrets = [
      's2s-${env}': [
              secret('microservicekey-am-org-role-mapping-service', 'BEFTA_S2S_CLIENT_SECRET'),
              secret('microservicekey-am-org-role-mapping-service', 'AM_ORG_ROLE_MAPPING_SERVICE_SECRET')
      ],
      'am-${env}': [
              secret('orm-IDAM-CLIENT-ID', 'ORM_IDAM_CLIENT_ID'),
              secret('orm-IDAM-CLIENT-SECRET', 'ORG_ROLE_MAPPING_IDAM_CLIENT_SECRET'),
              secret('orm-IDAM-CLIENT-SECRET', 'OAUTH2_CLIENT_SECRET'),
              secret('role-assignment-service-LD-SDK-KEY', 'LD_SDK_KEY'),
              secret('test-am-user2-befta-pwd', 'TEST_AM_USER2_BEFTA_PWD'),
              secret('test-am-crd-user1-befta', 'TEST_AM_CRD_USER1_BEFTA'),
              secret('test-am-crd-user1-befta-password', 'TEST_AM_CRD_USER1_BEFTA_PASSWORD'),
              secret('caseworker-topic-primary-send-listen-shared-access-key', 'CRD_SHARED_ACCESS_KEY_VALUE'),
              secret('judicial-topic-primary-send-listen-shared-access-key', 'JRD_SHARED_ACCESS_KEY_VALUE')
      ]
]

withNightlyPipeline(type, product, component) {
  /*enableSlackNotifications('#am-org-role-mapping-service-builds')*/

  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.IDAM_S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.BEFTA_S2S_CLIENT_ID = "am_org_role_mapping_service"
  env.OAUTH2_REDIRECT_URI = "http://am-role-assignment-service-aat.service.core-compute-aat.internal/oauth2redirect"
  env.OAUTH2_CLIENT_ID = "am_role_assignment"
  env.OAUTH2_ACCESS_TOKEN_TYPE = "OIDC"
  env.BEFTA_RESPONSE_HEADER_CHECK_POLICY = "JUST_WARN"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.OAUTH2_SCOPE_VARIABLES = "openid%20profile%20roles%20authorities"
  env.OPENID_SCOPE_VARIABLES = "openid+profile+roles+authorities"
  env.MICROSERVICE_NAME = "am_org_role_mapping_service"
  env.DEFINITION_STORE_HOST = "http://ccd-definition-store-api-pr-575.service.core-compute-preview.internal"
  env.ROLE_ASSIGNMENT_URL = "http://am-role-assignment-service-aat.service.core-compute-aat.internal"
  env.CRD_URL = "http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal"
  env.USER_PROFILE_URL= "https://rd-user-profile-api-pr-575.service.core-compute-preview.internal"
  env.AMQP_HOST = "rd-servicebus-aat.servicebus.windows.net"
  env.PUBLISHER_TOPIC = "rd-caseworker-topic-aat"
  env.TEST_URL = "http://am-org-role-mapping-service-aat.service.core-compute-aat.internal"

  overrideVaultEnvironments(vaultOverrides)
  loadVaultSecrets(secrets)

  enableMutationTest()
  enableFullFunctionalTest()

  before('fullFunctionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/integration/**/*'
  }

  after('build') {
    stage("integration tests") {
      sh "./gradlew integration"
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/integration/**/*'
    }
  }

  after('fullFunctionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/cucumber/**/*'
  }
}
