java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  keyVaults:
    am:
      secrets:
        - AppInsightsInstrumentationKey
        - am-org-role-mapping-service-s2s-secret
        - role-assignment-service-LD-SDK-KEY
        - orm-IDAM-CLIENT-ID
        - orm-IDAM-CLIENT-SECRET
        - orm-IDAM-ADMIN-SECRET
        - caseworker-topic-primary-send-listen-shared-access-key
  environment:
    IDAM_S2S_URL: http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal
    S2S_URL: http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal
    CASE_WORKER_REF_APP_URL: http://rd-caseworker-ref-api-pr-302.service.core-compute-preview.internal
    AMQP_TOPIC_NAME: rd-caseworker-topic-{{ .Values.global.environment }}/subscriptions/rd-caseworker-subscription-aat-refresh
    ROLE_ASSIGNMENT_APP_URL: http://am-role-assignment-service-pr-580.service.core-compute-preview.internal
    LAUNCH_DARKLY_ENV: pr
    ORG_ROLE_MAPPING_DB_HOST: "{{ .Release.Name }}-postgresql"
    ORG_ROLE_MAPPING_DB_NAME: "{{ .Values.postgresql.postgresqlDatabase}}"
    ORG_ROLE_MAPPING_DB_USERNAME: "{{ .Values.postgresql.postgresqlUsername}}"
    ORG_ROLE_MAPPING_DB_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
    ORG_ROLE_MAPPING_DB_PORT: "{{ .Values.postgresql.postgresqlPort}}"
    ORG_ROLE_MAPPING_DB_OPTIONS: "?stringtype=unspecified"
  postgresql:
    enabled: true
    postgresqlUsername: org_role_mapping
    postgresqlPassword: org_role_mapping
    postgresqlDatabase: org_role_mapping
    postgresqlPort: 5432