java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
#  overidding dev memory and cpu limits to make it match with standard limits
#  https://github.com/hmcts/chart-java/blob/master/java/values.yaml
  devmemoryRequests: 1024Mi
  devcpuRequests: 250m
  devmemoryLimits: 2048Mi
  devcpuLimits: 1500m

  secrets:
    SB_ACCESS_KEY:
      secretRef: am-sb-preview
      key: primaryKey
    SB_CONNECTION_STRING:
      secretRef: am-sb-preview
      key: connectionString

  keyVaults:
    am:
      secrets:
        - name: app-insights-connection-string
          alias: app-insights-connection-string
        - name: am-org-role-mapping-service-s2s-secret
          alias: AM_ORG_ROLE_MAPPING_SERVICE_SECRET
        - name: role-assignment-service-LD-SDK-KEY
          alias: LD_SDK_KEY
        - name: orm-IDAM-CLIENT-ID
          alias: ORM_IDAM_CLIENT_ID
        - name: orm-IDAM-CLIENT-SECRET
          alias: ORG_ROLE_MAPPING_IDAM_CLIENT_SECRET
        - name: orm-IDAM-ADMIN-SECRET
          alias: ORG_ROLE_MAPPING_IDAM_ADMIN_PASSWORD
  environment:
    IDAM_S2S_URL: http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal
    S2S_URL: http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal
    ROLE_ASSIGNMENT_APP_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
    JUDICIAL_BOOKING_APP_URL: http://am-judicial-booking-service-aat.service.core-compute-aat.internal
    CASE_WORKER_REF_APP_URL: http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal
    JUDICIAL_REF_APP_URL: http://rd-judicial-api-aat.service.core-compute-aat.internal
    LAUNCH_DARKLY_ENV: pr
    AMQP_SHARED_ACCESS_KEY_NAME: RootManageSharedAccessKey
    AMQP_HOST: "am-sb-preview.servicebus.windows.net"
    AMQP_JRD_NEW_ASB_ENABLED: false
    AMQP_CRD_NEW_ASB_ENABLED: true
    CRD_SUBSCRIPTION_NAME: "{{ .Release.Name}}-asb-crd-topic"
    JRD_SUBSCRIPTION_NAME: "{{ .Release.Name}}-asb-jrd-topic"
    CRD_TOPIC_NAME: "{{ .Release.Name}}-asb-crd-topic"
    JRD_TOPIC_NAME: "{{ .Release.Name}}-asb-jrd-topic"
    AMQP_CRD_SHARED_ACCESS_KEY_VALUE: "$(SB_ACCESS_KEY)"
    AMQP_JRD_SHARED_ACCESS_KEY_VALUE: "$(SB_ACCESS_KEY)"
    ORG_ROLE_MAPPING_DB_HOST: "{{ .Release.Name }}-postgresql"
    ORG_ROLE_MAPPING_DB_NAME: "{{ .Values.postgresql.auth.database}}"
    ORG_ROLE_MAPPING_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
    ORG_ROLE_MAPPING_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    ORG_ROLE_MAPPING_DB_PORT: "{{ .Values.postgresql.auth.port}}"
    ORG_ROLE_MAPPING_DB_OPTIONS: "?stringtype=unspecified"
    TESTING_SUPPORT_ENABLED: true
    RUN_LD_ON_STARTUP: true
  postgresql:
    enabled: true
    auth:
      port: 5432

servicebus:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-asb
  resourceGroup: "am-aso-preview-rg"
  sbNamespace: am-servicebus-preview
  setup:
    topics:
      - name: crd-topic
        subscriptionNeeded: yes
      - name: jrd-topic
        subscriptionNeeded: yes
