java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}

  secrets:
    AMQP_SHARED_ACCESS_KEY_VALUE:
      secretRef: servicebus-secret-namespace-{{ .Release.Name }}-servicebus
      key: primaryKey
    AMQP_HOST:
      secretRef: servicebus-secret-namespace-{{ .Release.Name }}-servicebus
      key: namespaceName
    CRD_SUBSCRIPTION_NAME:
      secretRef: servicebus-secret-topic-{{ .Release.Name }}-servicebus-rd-caseworker-topic
      key: subscriptionName
    JRD_SUBSCRIPTION_NAME:
      secretRef: servicebus-secret-topic-{{ .Release.Name }}-servicebus-rd-judicial-topic
      key: subscriptionName

  keyVaults:
    am:
      secrets:
        - AppInsightsInstrumentationKey
        - am-org-role-mapping-service-s2s-secret
        - role-assignment-service-LD-SDK-KEY
        - orm-IDAM-CLIENT-ID
        - orm-IDAM-CLIENT-SECRET
        - orm-IDAM-ADMIN-SECRET
  environment:
    IDAM_S2S_URL: http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal
    S2S_URL: http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal
    CASE_WORKER_REF_APP_URL: http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal
    JUDICIAL_REF_APP_URL: http://rd-judicial-api-aat.service.core-compute-aat.internal
    ROLE_ASSIGNMENT_APP_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
    JUDICIAL_BOOKING_APP_URL: http://am-judicial-booking-service-aat.service.core-compute-aat.internal
    LAUNCH_DARKLY_ENV: pr
    AMQP_SHARED_ACCESS_KEY_NAME: RootManageSharedAccessKey
    AMQP_HOST: "$(AMQP_HOST)"
    CRD_SUBSCRIPTION_NAME: "$(CRD_SUBSCRIPTION_NAME)"
    JRD_SUBSCRIPTION_NAME: "$(JRD_SUBSCRIPTION_NAME)"
    CRD_TOPIC_NAME: rd-caseworker-topic
    JRD_TOPIC_NAME: rd-judicial-topic
    AMQP_CRD_SHARED_ACCESS_KEY_VALUE: "$(AMQP_SHARED_ACCESS_KEY_VALUE)"
    AMQP_JRD_SHARED_ACCESS_KEY_VALUE: "$(AMQP_SHARED_ACCESS_KEY_VALUE)"
    ORG_ROLE_MAPPING_DB_HOST: "{{ .Release.Name }}-postgresql"
    ORG_ROLE_MAPPING_DB_NAME: "{{ .Values.postgresql.postgresqlDatabase}}"
    ORG_ROLE_MAPPING_DB_USERNAME: "{{ .Values.postgresql.postgresqlUsername}}"
    ORG_ROLE_MAPPING_DB_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
    ORG_ROLE_MAPPING_DB_PORT: "{{ .Values.postgresql.postgresqlPort}}"
    ORG_ROLE_MAPPING_DB_OPTIONS: "?stringtype=unspecified"
  postgresql:
    enabled: true
    postgresqlUsername: org_role_mapping
    postgresqlPassword: org_role_mapping
    postgresqlDatabase: org_role_mapping
    postgresqlPort: 5432
servicebus:
  enabled: true
  teamName: RD
  resourceGroup: rd-aks
  serviceplan: standard
  setup:
    topics:
      - name: rd-caseworker-topic
        subscriptionNeeded: yes
      - name: rd-judicial-topic
        subscriptionNeeded: yes