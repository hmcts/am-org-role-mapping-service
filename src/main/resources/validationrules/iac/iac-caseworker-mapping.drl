package validationrules.iac;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.UserAccessProfile;
import java.util.ArrayList;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;

rule "iac_senior_tribunal_caseworker"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.getIAC_1_0.getValue())
  $up: UserAccessProfile(roleId == "1", serviceCode == "BFA1", !suspended)
then
   System.out.println("Drool rule for iac_senior_tribunal_caseworker for IAC_1_0 :");
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.LEGAL_OPERATIONS)
      .roleType(RoleType.ORGANISATION)
      .roleName("senior-tribunal-caseworker")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
end;

rule "iac_tribunal_caseworker"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.getIAC_1_0.getValue())
  $up: UserAccessProfile(roleId == "2", serviceCode == "BFA1", !suspended)
then
     System.out.println("Drool rule for iac_tribunal_caseworker for IAC_1_0 :");
     Map<String,JsonNode> attr = new HashMap<>();
     attr.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
     attr.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType    (ActorIdType.IDAM)
      .actorId        ($up.getId())
      .roleCategory   (RoleCategory.LEGAL_OPERATIONS)
      .roleType       (RoleType.ORGANISATION)
      .roleName       ("tribunal-caseworker")
      .grantType      (GrantType.STANDARD)
      .classification (Classification.PUBLIC)
      .readOnly       (false)
      .attributes(attr)
      .build());
end;

rule "iac_senior_tribunal_caseworker_new"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.getIAC_1_1.getValue())
  $up: UserAccessProfile(roleId == "1", serviceCode == "BFA2", !suspended)
then
   System.out.println("Drool rule for iac_senior_tribunal_caseworker for IAC_1_1 :");
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.LEGAL_OPERATIONS)
      .roleType(RoleType.ORGANISATION)
      .roleName("senior-tribunal-caseworker")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
end;

rule "iac_tribunal_caseworker_new"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.getIAC_1_1.getValue())
  $up: UserAccessProfile(roleId == "2", serviceCode == "BFA2", !suspended)
then
   System.out.println("Drool rule for iac_tribunal_caseworker for IAC_1_1 :");
   Map<String,JsonNode> attr = new HashMap<>();
     attr.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
     attr.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType    (ActorIdType.IDAM)
      .actorId        ($up.getId())
      .roleCategory   (RoleCategory.LEGAL_OPERATIONS)
      .roleType       (RoleType.ORGANISATION)
      .roleName       ("tribunal-caseworker")
      .grantType      (GrantType.STANDARD)
      .classification (Classification.PUBLIC)
      .readOnly       (false)
      .attributes(attr)
      .build());
end;