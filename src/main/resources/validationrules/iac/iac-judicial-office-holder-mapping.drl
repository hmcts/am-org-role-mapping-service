package validationrules.iac;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialAccessProfile;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialOfficeHolder;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.Authorisation;
import java.util.ArrayList;
import java.lang.String;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import java.time.ZonedDateTime;
import java.time.LocalDateTime;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.JudicialRolesEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;
import function uk.gov.hmcts.reform.orgrolemapping.helper.AssignmentRequestBuilder.validateAuthorisation

/*
 * "IAC President of Tribunals" business role can be assign to Judicial Office holder by existing JudicialAccessProfile
 *  having values from JRD response

 */


rule "iac_president_of_tribunals_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(appointment == "President of Tribunal", serviceCode == "BFA1",
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0))
then

  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC President of Tribunals")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_president_of_tribunals_joh");

end;


rule "iac_tribunal_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(appointment == "Tribunal Judge", appointmentType in ("Salaried","SPTW"), serviceCode == "BFA1",
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0))
then

  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Tribunal Judge (Salaried)")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_tribunal_judge_salaried_joh");

end;


rule "iac_tribunal_judge_Fee_Paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(appointment == "Tribunal Judge", appointmentType == "fee paid", serviceCode == "BFA1",
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Tribunal Judge (Fee-Paid)")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_tribunal_judge_Fee_Paid_joh");

end;



rule "iac_resident_immigration_judge_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(serviceCode == "BFA1",
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
 (roles !=null && roles.contains(JudicialRolesEnum.RESIDENT_IMMIGRATION_JUDGE.getValue())))

then

  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Resident Immigration Judge")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_resident_immigration_judge_joh");
end;

rule "iac_assistant_resident_judge_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(serviceCode == "BFA1",
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
 (roles !=null && roles.contains(JudicialRolesEnum.ASSISTANT_RESIDENT_JUDGE.getValue())))

then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Assistant Resident Judge")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_assistant_resident_judge_joh");
 end;


rule "iac_designated_immigration_judge_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(serviceCode == "BFA1",
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
 (roles !=null && roles.contains(JudicialRolesEnum.DESIGNATED_IMMIGRATION_JUDGE.getValue())))

then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Designated Immigration Judge")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_designated_immigration_judge_joh");
end;

/*
 * Authorisation start from here when appointment is non iac.
 */


rule "iac_president_of_tribunals_joh_with_authorisation"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(appointment == "President of Tribunal", (serviceCode == null || serviceCode != "BFA1"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),validateAuthorisation(authorisations))
then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC President of Tribunals")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_president_of_tribunals_joh_with_authorisation");

end;

rule "iac_tribunal_judge_salaried_joh_with_authorisation"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(appointment == "Tribunal Judge", appointmentType in ("Salaried","SPTW"), (serviceCode == null || serviceCode != "BFA1"),
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),validateAuthorisation(authorisations))
then

  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Tribunal Judge (Salaried)")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_tribunal_judge_salaried_joh_with_authorisation");

end;

rule "iac_tribunal_judge_Fee_Paid_joh_with_authorisation"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(appointment == "Tribunal Judge", appointmentType == "fee paid", (serviceCode == null || serviceCode != "BFA1"),
 (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),validateAuthorisation(authorisations))

then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("IAC Tribunal Judge (Fee-Paid)")
      .jurisdiction("IA")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : iac_tribunal_judge_Fee_Paid_joh_with_authorisation");

end;

rule "iac_resident_immigration_judge_joh_with_authorisation"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile((serviceCode == null || serviceCode != "BFA1"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles !=null && roles.contains(JudicialRolesEnum.RESIDENT_IMMIGRATION_JUDGE.getValue())),validateAuthorisation(authorisations))
then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Resident Immigration Judge")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_resident_immigration_judge_joh_with_authorisation");
end;

rule "iac_assistant_resident_judge_joh_with_authorisation"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile((serviceCode == null || serviceCode != "BFA1"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles !=null && roles.contains(JudicialRolesEnum.ASSISTANT_RESIDENT_JUDGE.getValue())),validateAuthorisation(authorisations))

then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Assistant Resident Judge")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_assistant_resident_judge_joh_with_authorisation");
  end;

rule "iac_designated_immigration_judge_joh_with_authorisation"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile((serviceCode == null || serviceCode != "BFA1"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles !=null && roles.contains(JudicialRolesEnum.DESIGNATED_IMMIGRATION_JUDGE.getValue())),
   validateAuthorisation(authorisations))
then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Designated Immigration Judge")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_designated_immigration_judge_joh_with_authorisation");
 end;


rule "iac_default_tribunal_judge_salaried_joh_with_authorisation_based_on_roles_and_appointment"
salience -900
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile((serviceCode == null || serviceCode != "BFA1"),
   (appointment != "President of Tribunal"
   && appointment != "Tribunal Judge" ),
   appointmentType in ("Salaried","SPTW"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles == null || (
      !roles.contains("Resident Immigration Judge") &&
      !roles.contains("Assistant Resident Judge") &&
      !roles.contains("Designated Immigration Judge"))),
   validateAuthorisation(authorisations))
then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Tribunal Judge (Salaried)")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_default_tribunal_judge_salaried_joh_with_authorisation_based_on_roles_and_appointment");
end;

rule "iac_default_tribunal_judge_fee_paid_joh_with_authorisation_based_on_roles_and_appointment"
salience -900
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile((serviceCode == null || serviceCode != "BFA1"),
   (appointment != "President of Tribunal"
   && appointment != "Tribunal Judge" ),
   appointmentType == "fee paid",
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles == null || (
      !roles.contains("Resident Immigration Judge") &&
      !roles.contains("Assistant Resident Judge") &&
      !roles.contains("Designated Immigration Judge"))),
   validateAuthorisation(authorisations))
then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Tribunal Judge (Fee-Paid)")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_default_tribunal_judge_fee_paid_joh_with_authorisation_based_on_roles_and_appointment");
end;

rule "iac_default_tribunal_judge_salaried_joh_with_iac_appointment_based_on_roles_and_appointment"
salience -900
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(serviceCode == "BFA1",
   (appointment != "President of Tribunal"
   && appointment != "Tribunal Judge" ),
   appointmentType in ("Salaried","SPTW"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles == null || (
      !roles.contains("Resident Immigration Judge") &&
      !roles.contains("Assistant Resident Judge") &&
      !roles.contains("Designated Immigration Judge"))))

then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Tribunal Judge (Salaried)")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_default_tribunal_judge_salaried_joh_with_iac_appointment_based_on_roles_and_appointment");
end;

rule "iac_default_tribunal_judge_fee_paid_joh_with_iac_appointment_based_on_roles_and_appointment"
salience -900
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_JRD_1_0.getValue())
  $jap: JudicialAccessProfile(serviceCode == "BFA1",
   (appointment != "President of Tribunal"
   && appointment != "Tribunal Judge" ),
   appointmentType not in ("Salaried","SPTW"),
   (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
   (roles == null || (
      !roles.contains("Resident Immigration Judge") &&
      !roles.contains("Assistant Resident Judge") &&
      !roles.contains("Designated Immigration Judge"))))
then
 insert(
       JudicialOfficeHolder.builder()
       .userId($jap.getUserId())
       .office("IAC Tribunal Judge (Fee-Paid)")
       .jurisdiction("IA")
       .ticketCodes($jap.getTicketCodes())
       .beginTime($jap.getBeginTime())
       .endTime($jap.getEndTime())
       .regionId($jap.getRegionId())
       .baseLocationId($jap.getBaseLocationId())
       .primaryLocation($jap.getPrimaryLocationId())
       .contractType($jap.getAppointmentType())
       .build());
       logMsg("Rule : iac_default_tribunal_judge_fee_paid_joh_with_iac_appointment_based_on_roles_and_appointment");
end;




