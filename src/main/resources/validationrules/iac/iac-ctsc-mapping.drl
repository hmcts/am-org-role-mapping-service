package validationrules.iac;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.CaseWorkerAccessProfile;
import java.util.ArrayList;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;

/*
 * IAC ctsc "ctsc" Org role mapping.
 */

rule "iac_ctsc_caseworker_v11"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_1_1.getValue())
  $up: CaseWorkerAccessProfile(roleId in ("9","10"), serviceCode == "BFA1", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work, upper_tribunal, routine_work"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("ctsc")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .authorisations($up.getSkillCodes())
      .build());
      logMsg("Rule : iac_ctsc_caseworker_v11");
end;

rule "iac_hmcts_ctsc_caseworker_v11"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_1_1.getValue())
  $up: CaseWorkerAccessProfile(roleId in ("9","10"), serviceCode == "BFA1", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("hmcts-ctsc")
      .grantType(GrantType.BASIC)
      .classification(Classification.PRIVATE)
      .readOnly(true)
      .attributes(attribute)
      .build());
      logMsg("Rule : iac_hmcts_ctsc_caseworker_v11");
end;

/*
 * IAC ctsc "ctsc-team-leader" Org role mapping. added for CR:AM2732
 */

rule "iac_ctsc-team-leader_v12"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_WA_1_2.getValue())
  $up: CaseWorkerAccessProfile(roleId in ("9"), serviceCode == "BFA1", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work, upper_tribunal, routine_work"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("ctsc-team-leader")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .authorisations($up.getSkillCodes())
      .build());
      logMsg("Rule : iac_ctsc-team-leader_v12");
end;

/*
 * IAC ctsc "case-allocator" Org role mapping. added for CR:AM2732
 */

rule "iac_case-allocator_v12"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_WA_1_2.getValue())
  $up: CaseWorkerAccessProfile(roleId in ("9","10"), serviceCode == "BFA1", !suspended,caseAllocatorFlag == "Y")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("case-allocator")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .authorisations($up.getSkillCodes())
      .build());
      logMsg("Rule : iac_case-allocator_v12");
end;

/*
 * IAC ctsc "task-supervisor" Org role mapping. added for CR:AM2732
 */

rule "iac_task-supervisor_v12"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.IAC_WA_1_2.getValue())
  $up: CaseWorkerAccessProfile(roleId in ("9","10"), serviceCode == "BFA1", !suspended,taskSupervisorFlag == "Y")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("IA"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($up.getPrimaryLocationId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($up.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("task-supervisor")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .authorisations($up.getSkillCodes())
      .build());
      logMsg("Rule : iac_task-supervisor_v12");
end;