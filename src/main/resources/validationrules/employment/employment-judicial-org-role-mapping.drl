package validationrules.employment;

import uk.gov.hmcts.reform.orgrolemapping.domain.model.constants.JudicialOfficeHolder.Office;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.constants.RoleAssignmentConstants.Attributes;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.constants.RoleAssignmentConstants.RoleName;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Jurisdiction;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialAccessProfile;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialOfficeHolder;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialBooking;
import java.util.ArrayList;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;

/*
 * EMPLOYMENT "hmcts-judiciary" Org role mapping.
 * Made obsolete in DTSAM-988 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_hmcts_judiciary_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f2: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
$joh: JudicialOfficeHolder(office in ( "EMPLOYMENT President of Tribunal-Salaried",
                                        "EMPLOYMENT Vice President-Salaried",
                                        "EMPLOYMENT Regional Employment Judge-Salaried",
                                        "EMPLOYMENT Employment Judge-Salaried",
                                        "EMPLOYMENT Employment Judge-Fee-Paid",
                                        "EMPLOYMENT Tribunal Member-Fee-Paid",
                                        "EMPLOYMENT Tribunal Member Lay-Fee-Paid",
                                        "EMPLOYMENT President Employment Tribunals (Scotland)-Salaried",
                                        "EMPLOYMENT Vice-President Employment Tribunal (Scotland)-Salaried",
                                        "EMPLOYMENT Acting Regional Employment Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   if ($joh.getOffice().contains("Salaried")) {
    attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   } else{
    attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   }

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("hmcts-judiciary")
      .grantType(GrantType.BASIC)
      .classification(Classification.PRIVATE)
      .readOnly(true)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .build());
      logMsg("Rule : employment_hmcts_judiciary_org_role");
end;

/*
 * EMPLOYMENT "hmcts-judiciary" Org role mapping.
 */
rule "v3_0_employment_hmcts_judiciary_org_role"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
    $joh: JudicialOfficeHolder(office in ( Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED,
                                           Office.Employment.PRESIDENT_ET_SCOTLAND_SALARIED,
                                           Office.Employment.VICE_PRESIDENT_SALARIED,
                                           Office.Employment.REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                           Office.Employment.ACTING_REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                           Office.Employment.EMPLOYMENT_JUDGE_SALARIED,
                                           Office.Employment.EMPLOYMENT_JUDGE_FEE_PAID,
                                           Office.Employment.TRIBUNAL_MEMBER_FEE_PAID
                                           ))
then
    Map<String,JsonNode> attribute = new HashMap<>();
    if ($joh.isSalaried()) {
        attribute.put(Attributes.Name.CONTRACT_TYPE, JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.SALARIED));
    } else{
        attribute.put(Attributes.Name.CONTRACT_TYPE, JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.FEE_PAID));
    }

    insert(
        RoleAssignment.builder()
            .actorIdType(ActorIdType.IDAM)
            .actorId($joh.getUserId())
            .roleCategory(RoleCategory.JUDICIAL)
            .roleType(RoleType.ORGANISATION)
            .roleName(RoleName.HMCTS_JUDICIARY)
            .grantType(GrantType.BASIC)
            .classification(Classification.PRIVATE)
            .readOnly(true)
            .beginTime($joh.getBeginTime())
            .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
            .attributes(attribute)
            .build()
    );
    logMsg("Rule : V3_0_employment_hmcts_judiciary_org_role");
end;

/*
 * EMPLOYMENT "task-supervisor" Org role mapping.
 * Made obsolete in DTSAM-995 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_task_supervisor_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f1: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( "EMPLOYMENT President of Tribunal-Salaried",
                                         "EMPLOYMENT Vice President-Salaried",
                                         "EMPLOYMENT Regional Employment Judge-Salaried",
                                         "EMPLOYMENT President Employment Tribunals (Scotland)-Salaried",
                                         "EMPLOYMENT Vice-President Employment Tribunal (Scotland)-Salaried",
                                         "EMPLOYMENT Acting Regional Employment Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("task-supervisor")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_task_supervisor_org_role");
end;

/*
 * EMPLOYMENT "task-supervisor" Org role mapping for v3_0.
 */
rule "v3_0_employment_task_supervisor_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED,
                                         Office.Employment.PRESIDENT_ET_SCOTLAND_SALARIED,
                                         Office.Employment.VICE_PRESIDENT_SALARIED,
                                         Office.Employment.REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.ACTING_REGIONAL_EMPLOYMENT_JUDGE_SALARIED
                                         ))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.SALARIED));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("task-supervisor")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : v3_0_employment_task_supervisor_org_role");
end;

/*
 * EMPLOYMENT "case-allocator" Org role mapping.
 * Made obsolete in DTSAM-995 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_case_allocator_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f1: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( "EMPLOYMENT President of Tribunal-Salaried",
                                        "EMPLOYMENT Vice President-Salaried",
                                        "EMPLOYMENT Regional Employment Judge-Salaried",
                                        "EMPLOYMENT Employment Judge-Salaried",
                                        "EMPLOYMENT President Employment Tribunals (Scotland)-Salaried",
                                        "EMPLOYMENT Vice-President Employment Tribunal (Scotland)-Salaried",
                                        "EMPLOYMENT Acting Regional Employment Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("case-allocator")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_case_allocator_org_role");
end;

/*
 * EMPLOYMENT "case-allocator" Org role mapping for v3_0.
 */
rule "v3_0_employment_case_allocator_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED,
                                         Office.Employment.PRESIDENT_ET_SCOTLAND_SALARIED,
                                         Office.Employment.VICE_PRESIDENT_SALARIED,
                                         Office.Employment.REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.ACTING_REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.EMPLOYMENT_JUDGE_SALARIED
                                        ))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.SALARIED));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("case-allocator")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : v3_0_employment_case_allocator_org_role");
end;

/*
 * EMPLOYMENT "specific-access-approver-judiciary" Org role mapping.
 * Made obsolete in DTSAM-995 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_specific_access_approver_judiciary_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f1: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( "EMPLOYMENT President of Tribunal-Salaried",
                                        "EMPLOYMENT Vice President-Salaried",
                                        "EMPLOYMENT Regional Employment Judge-Salaried",
                                        "EMPLOYMENT President Employment Tribunals (Scotland)-Salaried",
                                        "EMPLOYMENT Vice-President Employment Tribunal (Scotland)-Salaried",
                                        "EMPLOYMENT Acting Regional Employment Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   if (!$joh.getOffice().contains("President of Tribunal")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("access_requests"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("specific-access-approver-judiciary")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_specific_access_approver_judiciary_org_role");
end;

/*
 * EMPLOYMENT "specific-access-approver-judiciary" Org role mapping for v3_0.
 */
rule "v3_0_employment_specific_access_approver_judiciary_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED,
                                         Office.Employment.PRESIDENT_ET_SCOTLAND_SALARIED,
                                         Office.Employment.VICE_PRESIDENT_SALARIED,
                                         Office.Employment.REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.ACTING_REGIONAL_EMPLOYMENT_JUDGE_SALARIED
                                        ))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.SALARIED));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   if (!$joh.getOffice().equals(Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED)) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("access_requests"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("specific-access-approver-judiciary")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : v3_0_employment_specific_access_approver_judiciary_org_role");
end;

/*
 * EMPLOYMENT "leadership-judge" Org role mapping.
 * Made obsolete in DTSAM-995 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_leadership_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f1: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( "EMPLOYMENT Vice President-Salaried",
                                         "EMPLOYMENT Regional Employment Judge-Salaried",
                                         "EMPLOYMENT President of Tribunal-Salaried",
                                         "EMPLOYMENT President Employment Tribunals (Scotland)-Salaried",
                                         "EMPLOYMENT Vice-President Employment Tribunal (Scotland)-Salaried",
                                         "EMPLOYMENT Acting Regional Employment Judge-Salaried"
                                        ))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   if (!$joh.getOffice().contains("President of Tribunal")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("leadership-judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_leadership_judge_org_role");
end;

/*
 * EMPLOYMENT "leadership-judge" Org role mapping for v3_0.
 */
rule "v3_0_employment_leadership_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED,
                                         Office.Employment.PRESIDENT_ET_SCOTLAND_SALARIED,
                                         Office.Employment.VICE_PRESIDENT_SALARIED,
                                         Office.Employment.REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.ACTING_REGIONAL_EMPLOYMENT_JUDGE_SALARIED))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.SALARIED));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   if (!$joh.getOffice().equals(Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED)) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("leadership-judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : v3_0_employment_leadership_judge_org_role");
end;

/*
 * EMPLOYMENT "judge" Org role mapping.
 * Made obsolete in DTSAM-995 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f1: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( "EMPLOYMENT Vice President-Salaried",
                                         "EMPLOYMENT Regional Employment Judge-Salaried",
                                         "EMPLOYMENT President of Tribunal-Salaried",
                                         "EMPLOYMENT Employment Judge-Salaried",
                                         "EMPLOYMENT President Employment Tribunals (Scotland)-Salaried",
                                         "EMPLOYMENT Vice-President Employment Tribunal (Scotland)-Salaried",
                                         "EMPLOYMENT Acting Regional Employment Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   if (!$joh.getOffice().contains("President of Tribunal")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,decision_making_work,routine_work,applications,amendments"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_judge_org_role");
end;

/*
 * EMPLOYMENT "judge" Org role mapping for v3_0.
 */
rule "v3_0_employment_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ( Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED,
                                         Office.Employment.PRESIDENT_ET_SCOTLAND_SALARIED,
                                         Office.Employment.VICE_PRESIDENT_SALARIED,
                                         Office.Employment.REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.ACTING_REGIONAL_EMPLOYMENT_JUDGE_SALARIED,
                                         Office.Employment.EMPLOYMENT_JUDGE_SALARIED
                                         ))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.SALARIED));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   if (!$joh.getOffice().equals(Office.Employment.PRESIDENT_OF_TRIBUNAL_SALARIED)) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,decision_making_work,routine_work,applications,amendments"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : v3_0_employment_judge_org_role");
end;

/*
 * EMPLOYMENT "fee-paid-judge" Org role mapping.
 * Made obsolete in DTSAM-988 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_fee_paid_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f2: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ("EMPLOYMENT Employment Judge-Fee-Paid"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,decision_making_work,routine_work,applications,amendments"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("fee-paid-judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_fee_paid_judge_org_role");
end;

/*
 * EMPLOYMENT "fee-paid-judge" Org role mapping.
 */
rule "v3_0_employment_fee_paid_judge_org_role"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
    $joh: JudicialOfficeHolder(office in (Office.Employment.EMPLOYMENT_JUDGE_FEE_PAID))
then
    Map<String,JsonNode> attribute = new HashMap<>();
    attribute.put(Attributes.Name.CONTRACT_TYPE, JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.FEE_PAID));
    attribute.put(Attributes.Name.JURISDICTION, JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
    attribute.put(Attributes.Name.PRIMARY_LOCATION, JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
    attribute.put(Attributes.Name.WORK_TYPES, JacksonUtils.convertObjectIntoJsonNode("hearing_work,decision_making_work,routine_work,applications,amendments"));

    insert(
        RoleAssignment.builder()
            .actorIdType(ActorIdType.IDAM)
            .actorId($joh.getUserId())
            .roleCategory(RoleCategory.JUDICIAL)
            .roleType(RoleType.ORGANISATION)
            .roleName(RoleName.FEE_PAID_JUDGE)
            .grantType(GrantType.STANDARD)
            .classification(Classification.PUBLIC)
            .readOnly(false)
            .beginTime($joh.getBeginTime())
            .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
            .attributes(attribute)
            .authorisations($joh.getTicketCodes())
            .build()
    );
    logMsg("Rule : v3_0_employment_fee_paid_judge_org_role");
end;

/*
 * EMPLOYMENT "tribunal-member" Org role mapping.
 * Made obsolete in DTSAM-994 - rule will be disabled when EMPLOYMENT_WA_3_0 is enabled.
 * To be removed in DTSAM-1041.
 */
rule "employment_tribunal_member_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
  $f2: FeatureFlag(status == false && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
  $joh: JudicialOfficeHolder(office in ("EMPLOYMENT Tribunal Member-Fee-Paid",
                                         "EMPLOYMENT Tribunal Member Lay-Fee-Paid"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("EMPLOYMENT"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work"));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("tribunal-member")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : employment_tribunal_member_org_role");
end;

/*
 * EMPLOYMENT "tribunal-member" Org role mapping for v3_0.
 */
rule "v3_0_employment_tribunal_member_org_role"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_3_0.getValue())
    $joh: JudicialOfficeHolder(office in (Office.Employment.TRIBUNAL_MEMBER_FEE_PAID))
then
    Map<String,JsonNode> attribute = new HashMap<>();
    attribute.put(Attributes.Name.CONTRACT_TYPE, JacksonUtils.convertObjectIntoJsonNode(Attributes.ContractType.FEE_PAID));
    attribute.put(Attributes.Name.JURISDICTION, JacksonUtils.convertObjectIntoJsonNode(Jurisdiction.EMPLOYMENT.getName()));
    attribute.put(Attributes.Name.PRIMARY_LOCATION, JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
    attribute.put(Attributes.Name.WORK_TYPES, JacksonUtils.convertObjectIntoJsonNode("hearing_work"));

    insert(
        RoleAssignment.builder()
            .actorIdType(ActorIdType.IDAM)
            .actorId($joh.getUserId())
            .roleCategory(RoleCategory.JUDICIAL)
            .roleType(RoleType.ORGANISATION)
            .roleName(RoleName.TRIBUNAL_MEMBER)
            .grantType(GrantType.STANDARD)
            .classification(Classification.PUBLIC)
            .readOnly(false)
            .beginTime($joh.getBeginTime())
            .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
            .attributes(attribute)
            .authorisations($joh.getTicketCodes())
            .build()
        );
        logMsg("Rule : v3_0_employment_tribunal_member_org_role");
end;