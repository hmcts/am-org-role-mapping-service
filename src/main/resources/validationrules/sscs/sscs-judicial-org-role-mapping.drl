package validationrules.sscs;

import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialAccessProfile;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialOfficeHolder;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialBooking;
import java.util.ArrayList;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;

/*
 * SSCS "leadership-judge" Org role mapping.
 */

rule "sscs_leadership_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   if (!$joh.getOffice().equalsIgnoreCase("SSCS President of Tribunal-Salaried")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("leadership-judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_leadership_judge_org_role");
end;

/*
 * SSCS "judge" Org role mapping.
 */

rule "sscs_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried",
                                        "SSCS Tribunal Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("pre_hearing,hearing_work,post_hearing,"
                                                                     + "decision_making_work,routine_work,priority"));
   if (!$joh.getOffice().equalsIgnoreCase("SSCS President of Tribunal-Salaried")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_judge_org_role");
end;

/*
 * SSCS "post-hearing-judge" Org role mapping.
 */

rule "sscs_post_hearing_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried",
                                        "SSCS Tribunal Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   Classification classification;
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   if (!$joh.getOffice().equalsIgnoreCase("SSCS President of Tribunal-Salaried")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
    classification = Classification.PUBLIC;
   } else {
    classification = Classification.PRIVATE;
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("post-hearing-judge")
      .grantType(GrantType.STANDARD)
      .classification(classification)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_post_hearing_judge_org_role");
end;

/*
 * SSCS "judge" Org role mapping.
 * this judge has 'y' under the '... and has a booking? ...' column
 * when fee paid judges use the booking service, they are temporarily given judge org role
 */

rule "sscs_judge_org_role_for_fee_paid_judge"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office == "SSCS Tribunal Judge-Fee Paid")
  $bk: JudicialBooking(userId == $joh.userId)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($bk.getLocationId() != null ?
         $bk.getLocationId():$joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("pre_hearing,hearing_work,post_hearing,"
                                                                     + "decision_making_work,routine_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($bk.getRegionId() != null ?
                                                                           $bk.getRegionId():$joh.getRegionId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($bk.getBeginTime())
      .endTime($bk.getEndTime())
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_judge_org_role_for_fee_paid_judge");
end;

/*
 * SSCS "case-allocator" Org role mapping.
 */

rule "sscs_case_allocator_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   if (!$joh.getOffice().equalsIgnoreCase("SSCS President of Tribunal-Salaried")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("case-allocator")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_case_allocator_org_role");
end;


/*
 * SSCS "task-supervisor" Org role mapping.
 */

rule "sscs_task_supervisor_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   if (!$joh.getOffice().equalsIgnoreCase("SSCS President of Tribunal-Salaried")) {
    attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("task-supervisor")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_task_supervisor_org_role");
end;

/*
 * SSCS "specific-access-approver-judiciary" Org role mapping.
 */

rule "sscs_specific_access_approver_judiciary_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("access_requests"));
   if (!$joh.getOffice().equalsIgnoreCase("SSCS President of Tribunal-Salaried")) {
       attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
      }

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("specific-access-approver-judiciary")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_specific_access_approver_judiciary_org_role");
end;

/*
 * SSCS "hmcts-judiciary" Org role mapping.
 */

rule "sscs_hmcts_judiciary_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS President of Tribunal-Salaried", "SSCS Regional Tribunal Judge-Salaried",
                                        "SSCS Tribunal Judge-Salaried", "SSCS Tribunal Judge-Fee Paid",
                                        "SSCS Tribunal Member Medical-Salaried", "SSCS Tribunal Member Medical-Fee Paid",
                                        "SSCS Tribunal Member Optometrist-Fee Paid", "SSCS Tribunal Member Disability-Fee Paid",
                                        "SSCS Tribunal Member-Fee Paid", "SSCS Tribunal Member Lay-Fee Paid",
                                        "SSCS Tribunal Member Service-Fee Paid", "SSCS Tribunal Member Financially Qualified"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   if ($joh.getOffice().contains("Salaried")) {
    attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   } else {
    attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("hmcts-judiciary")
      .grantType(GrantType.BASIC)
      .classification(Classification.PRIVATE)
      .readOnly(true)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .build());
      logMsg("Rule : sscs_hmcts_judiciary_org_role");
end;

/*
 * SSCS "fee-paid-judge" Org role mapping.
 */

rule "sscs_fee_paid_judge_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office == "SSCS Tribunal Judge-Fee Paid")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("pre_hearing,hearing_work,post_hearing,"
                                                                        + "decision_making_work,routine_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
   if ($joh.getTicketCodes() != null && $joh.getTicketCodes().contains("368")) {
    attribute.put("bookable", JacksonUtils.convertObjectIntoJsonNode("true"));
   }
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("fee-paid-judge")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_fee_paid_judge_org_role");
end;


/*
 * SSCS "medical" Org role mapping.
 */

rule "sscs_medical_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office == "SSCS Tribunal Member Medical-Salaried")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Salaried"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("medical")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_medical_org_role");
end;

/*
 * SSCS "fee-paid-medical" Org role mapping.
 */

rule "sscs_fee_paid_medical_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS Tribunal Member Medical-Fee Paid", "SSCS Tribunal Member Optometrist-Fee Paid"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("fee-paid-medical")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_fee_paid_medical_org_role");
end;


/*
 * SSCS "fee-paid-disability" Org role mapping.
 */

rule "sscs_fee_paid_disability_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office == "SSCS Tribunal Member Disability-Fee Paid")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("fee-paid-disability")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_fee_paid_disability_org_role");
end;

/*
 * SSCS "fee-paid-tribunal-member" Org role mapping.
 */

rule "sscs_fee_paid_tribunal_member_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office in ("SSCS Tribunal Member-Fee Paid", "SSCS Tribunal Member Lay-Fee Paid",
                                        "SSCS Tribunal Member Service-Fee Paid"))
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("fee-paid-tribunal-member")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_fee_paid_tribunal_member_org_role");
end;

/*
 * SSCS "fee-paid-financial" Org role mapping.
 */

rule "sscs_fee_paid_financial_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $joh: JudicialOfficeHolder(office == "SSCS Tribunal Member Financially Qualified")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($joh.getPrimaryLocation()));
   attribute.put("contractType", JacksonUtils.convertObjectIntoJsonNode("Fee-Paid"));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("hearing_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($joh.getRegionId()));
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($joh.getUserId())
      .roleCategory(RoleCategory.JUDICIAL)
      .roleType(RoleType.ORGANISATION)
      .roleName("fee-paid-financial")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .beginTime($joh.getBeginTime())
      .endTime($joh.getEndTime() !=null ? $joh.getEndTime().plusDays(1):null)
      .attributes(attribute)
      .authorisations($joh.getTicketCodes())
      .build());
      logMsg("Rule : sscs_fee_paid_financial_org_role");
end;

/*
 * SSCS "multi-region" Org role mapping.
 */

rule "sscs_multi_region_dependency_org_role_wales"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $ra: RoleAssignment(attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() in ("SSCS"),
                      attributes["region"] != null && attributes["region"].asText() in ("6"))
  not RoleAssignment(actorId == $ra.getActorId() && roleName == $ra.getRoleName()
                        && attributes["region"] != null && attributes["region"].asText() == "7")
then
   Map<String,JsonNode> attribute = new HashMap<>($ra.getAttributes());
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode("7"));

   insert(RoleAssignment.builder()
         .actorIdType($ra.getActorIdType())
         .actorId($ra.getActorId())
         .roleCategory($ra.getRoleCategory())
         .roleType($ra.getRoleType())
         .roleName($ra.getRoleName())
         .grantType($ra.getGrantType())
         .classification($ra.getClassification())
         .readOnly($ra.isReadOnly())
         .beginTime($ra.getBeginTime())
         .endTime($ra.getEndTime())
         .attributes(attribute)
         .authorisations($ra.getAuthorisations())
         .build());
   logMsg("Rule : sscs_multi_region_dependency_org_role_wales");
end;

rule "sscs_multi_region_dependency_org_role_southwest"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $ra: RoleAssignment(attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() in ("SSCS"),
                      attributes["region"] != null && attributes["region"].asText() in ("7"))
  not RoleAssignment(actorId == $ra.getActorId() && roleName == $ra.getRoleName()
                        && attributes["region"] != null && attributes["region"].asText() == "6" )
then
   Map<String,JsonNode> attribute = new HashMap<>($ra.getAttributes());
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode("6"));

   insert(RoleAssignment.builder()
         .actorIdType($ra.getActorIdType())
         .actorId($ra.getActorId())
         .roleCategory($ra.getRoleCategory())
         .roleType($ra.getRoleType())
         .roleName($ra.getRoleName())
         .grantType($ra.getGrantType())
         .classification($ra.getClassification())
         .readOnly($ra.isReadOnly())
         .beginTime($ra.getBeginTime())
         .endTime($ra.getEndTime())
         .attributes(attribute)
         .authorisations($ra.getAuthorisations())
         .build());
   logMsg("Rule : sscs_multi_region_dependency_org_role_southwest");
end;