package validationrules.sscs;

import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.CaseWorkerAccessProfile;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;

/*
 * SSCS ctsc "hmcts-ctsc" Org role mapping.
 */

rule "sscs_hmcts_ctsc_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId in ("9", "10"), serviceCode == "BBA3", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("hmcts-ctsc")
      .grantType(GrantType.BASIC)
      .classification(Classification.PRIVATE)
      .readOnly(true)
      .attributes(attribute)
      .build());
      logMsg("Rule : sscs_hmcts_ctsc_org_role");
end;

/*
 * SSCS ctsc "ctsc" Org role mapping.
 */

rule "sscs_ctsc_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId in ("9", "10"), serviceCode == "BBA3", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("pre_hearing,post_hearing,decision_making_work,applications,hearing_work,routine_work,priority"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("ctsc")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .authorisations($cap.getSkillCodes())
      .build());
      logMsg("Rule : sscs_ctsc_org_role");
end;

/*
 * SSCS ctsc "ctsc-team-leader" Org role mapping.
 */

rule "sscs_ctsc_team_leader_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId == "9", serviceCode == "BBA3", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("ctsc-team-leader")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .authorisations($cap.getSkillCodes())
      .build());
      logMsg("Rule : sscs_ctsc_team_leader_org_role");
end;

/*
 * SSCS ctsc "task-supervisor" Org role mapping.
 */

rule "sscs_ctsc_task_supervisor_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId in ("9", "10"), serviceCode == "BBA3", !suspended,
                            taskSupervisorFlag == "Y")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("task-supervisor")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : sscs_ctsc_task_supervisor_org_role");
end;

/*
 * SSCS ctsc "case-allocator" Org role mapping.
 */

rule "sscs_ctsc_case_allocator_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId in ("9", "10"), serviceCode == "BBA3", !suspended,
                            caseAllocatorFlag == "Y")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("case-allocator")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : sscs_ctsc_case_allocator_org_role");
end;

/*
 * SSCS ctsc "specific-access-approver-ctsc" Org role mapping.
 */

rule "sscs_specific_access_approver_ctsc_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId == "9", serviceCode == "BBA3", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("SSCS"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("access_requests"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.CTSC)
      .roleType(RoleType.ORGANISATION)
      .roleName("specific-access-approver-ctsc")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : sscs_specific_access_approver_ctsc_org_role");
end;
