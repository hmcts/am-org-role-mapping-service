package validationrules.privatelaw;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.CaseWorkerAccessProfile;
import java.util.ArrayList;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;


/*
 * privatelaw admin "hearing-centre-team-leader" Org role mapping.
 */

rule "privatelaw_admin_hearing_centre_team_leader_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId =="3", serviceCode == "ABA5", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("PRIVATELAW"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("routine_work,access_requests,hearing_work,applications"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.ADMIN)
      .roleType(RoleType.ORGANISATION)
      .roleName("hearing-centre-team-leader")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : privatelaw_admin_hearing_centre_team_leader_org_role");
end;

/*
 * privatelaw admin "task-supervisor" Org role mapping.
 */

rule "privatelaw_task_supervisor_admin_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId =="3", serviceCode == "ABA5", !suspended, taskSupervisorFlag == "Y")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("PRIVATELAW"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.ADMIN)
      .roleType(RoleType.ORGANISATION)
      .roleName("task-supervisor")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : privatelaw_task_supervisor_admin_org_role");
end;


/*
 * privatelaw admin "hmcts-admin" Org role mapping.
 */

rule "privatelaw_hmcts_admin_admin_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId in ("3","4"), serviceCode == "ABA5", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.ADMIN)
      .roleType(RoleType.ORGANISATION)
      .roleName("hmcts-admin")
      .grantType(GrantType.BASIC)
      .classification(Classification.PRIVATE)
      .readOnly(true)
      .attributes(attribute)
      .authorisations($cap.getSkillCodes())
      .build());
      logMsg("Rule : privatelaw_hmcts_admin_admin_org_role");
end;

/*
 * privatelaw admin "case-allocator" Org role mapping.
 */

rule "privatelaw_case_allocator_admin_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId =="3", serviceCode == "ABA5", !suspended,
                         caseAllocatorFlag == "Y")
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("PRIVATELAW"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.ADMIN)
      .roleType(RoleType.ORGANISATION)
      .roleName("case-allocator")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : privatelaw_case_allocator_admin_org_role");
end;

/*
 * privatelaw admin "hearing-centre-admin" Org role mapping.
 */

rule "privatelaw_hearing_centre_admin_org_role"
when
  $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
  $cap: CaseWorkerAccessProfile(roleId =="4", serviceCode == "ABA5", !suspended)
then
   Map<String,JsonNode> attribute = new HashMap<>();
   attribute.put("jurisdiction", JacksonUtils.convertObjectIntoJsonNode("PRIVATELAW"));
   attribute.put("primaryLocation", JacksonUtils.convertObjectIntoJsonNode($cap.getPrimaryLocationId()));
   attribute.put("workTypes", JacksonUtils.convertObjectIntoJsonNode("routine_work,hearing_work,applications"));
   attribute.put("region", JacksonUtils.convertObjectIntoJsonNode($cap.getRegionId()));

  insert(
      RoleAssignment.builder()
      .actorIdType(ActorIdType.IDAM)
      .actorId($cap.getId())
      .roleCategory(RoleCategory.ADMIN)
      .roleType(RoleType.ORGANISATION)
      .roleName("hearing-centre-admin")
      .grantType(GrantType.STANDARD)
      .classification(Classification.PUBLIC)
      .readOnly(false)
      .attributes(attribute)
      .build());
      logMsg("Rule : privatelaw_hearing_centre_admin_org_role");
end;