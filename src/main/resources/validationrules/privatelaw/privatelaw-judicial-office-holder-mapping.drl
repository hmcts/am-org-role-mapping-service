package validationrules.privatelaw;

import uk.gov.hmcts.reform.orgrolemapping.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.ActorIdType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.RoleType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.Classification;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialAccessProfile;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.JudicialOfficeHolder;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.Authorisation;
import java.util.ArrayList;
import java.util.Arrays;
import java.lang.String;
import  uk.gov.hmcts.reform.orgrolemapping.util.JacksonUtils;
import java.util.HashMap
import java.util.Map
import com.fasterxml.jackson.databind.JsonNode;
import java.time.ZonedDateTime;
import java.time.LocalDateTime;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.orgrolemapping.domain.model.enums.FeatureFlagEnum;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.logMsg;
import function uk.gov.hmcts.reform.orgrolemapping.domain.service.RequestMappingService.addAndGetTicketCodes;
import function uk.gov.hmcts.reform.orgrolemapping.helper.AssignmentRequestBuilder.validateAuthorisation

/*
 * "Stage 1 mapping from judicial appointments/roles(coming from RD JRD access profiles) to judicial office holder.
 * "PRIVATELAW Circuit Judge-Salaried" business role mapping to JOH.
 */
rule "privatelaw_circuit_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Circuit Judge",
                               appointmentType in ("Salaried", "SPTW"),
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Circuit Judge-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_circuit_judge_salaried_joh");
end;

/*
 * "PRIVATELAW Deputy Circuit Judge-Fee-Paid" business role business role mapping to JOH.
 */
rule "privatelaw_deputy_circuit_judge_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy Circuit Judge",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy Circuit Judge-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_circuit_judge_fee_paid_joh");
end;

/*
 * "PRIVATELAW Deputy District Judge-Fee-Paid" business role business role mapping to JOH.
 */
rule "privatelaw_deputy_district_judge_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy District Judge- Fee-Paid",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy District Judge-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_circuit_judge_fee_paid_joh");
end;

/*
 * "PRIVATELAW Deputy District Judge - Sitting in Retirement-Fee-Paid" business role business role mapping to JOH.
 */
rule "privatelaw_deputy_district_judge_sitting_in_retirement_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy District Judge- Sitting in Retirement",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy District Judge - Sitting in Retirement-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_district_judge_sitting_in_retirement_fee_paid_joh");
end;

/*
 * "PRIVATELAW District Judge" business role mapping to JOH.
 */
rule "privatelaw_district_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "District Judge",
                               appointmentType in ("Salaried", "SPTW"),
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW District Judge-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_district_judge_salaried_joh");
end;

/*
 * "PRIVATELAW Recorder-Fee-Paid" business role business role mapping to JOH.
 */
rule "privatelaw_recorder_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Recorder",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Recorder-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_recorder_fee_paid_joh");
end;

/*
 * "PRIVATELAW High Court Judge" business role mapping to JOH.
 */
rule "privatelaw_high_court_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "High Court Judge",
                               appointmentType in ("Salaried", "SPTW"),
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW High Court Judge-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_high_court_judge_salaried_joh");
end;

/*
 * "PRIVATELAW Designated Family Judge" business role mapping to JOH.
 */
rule "privatelaw_designated_family_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment != null,
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               (roles != null && roles.contains("Designated Family Judge")),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Designated Family Judge-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_designated_family_judge_salaried_joh");
end;


/*
 * "PRIVATELAW Presiding Judge" business role mapping to JOH.
 */
rule "privatelaw_presiding_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment != null,
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               (roles != null && roles.contains("Family Division Liaison Judge")),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Presiding Judge-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_presiding_judge_salaried_joh");
end;

/*
 * "PRIVATELAW Resident Judge Salaried" business role mapping to JOH.
 */
rule "privatelaw_resident_judge_salaried_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment != null,
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               (roles != null && roles.contains("Senior Family Liaison Judge")),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Resident Judge-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_resident_judge_salaried_joh");
end;

/*
 * "PRIVATELAW Deputy District Judge – PRFD-Fee-Paid" business role mapping to JOH.
 */
rule "privatelaw_deputy_district_judge_prfd_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy District Judge - PRFD",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy District Judge – PRFD-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_district_judge_prfd_fee_paid_joh");
end;

/*
 * "PRIVATELAW Deputy District Judge (MC)-Fee-Paid" business role mapping to JOH.
 */
rule "privatelaw_deputy_district_judge_mc_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy District Judge (MC)- Fee paid",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy District Judge – (MC)-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_district_judge_mc_fee_paid_joh");
end;

/*
 * "PRIVATELAW Deputy District Judge (MC)-Sitting in Retirement-Fee-Paid" business role mapping to JOH.
 */
rule "privatelaw_deputy_district_judge_mc_sitting_in_retirement_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy District Judge (MC)- Sitting in Retirement",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy District Judge – (MC)-Sitting in Retirement-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_district_judge_mc_sitting_in_retirement_fee_paid_joh");
end;

/*
 * "PRIVATELAW Deputy High Court Judge-Fee-Paid" business role mapping to JOH.
 */
rule "privatelaw_deputy_high_court_judge_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "Deputy High Court Judge",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW Deputy High Court Judge-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_deputy_high_court_judge_fee_paid_joh");
end;

/*
 * "PRIVATELAW District Judge (MC)-Salaried" business role mapping to JOH.
 */
rule "privatelaw_district_judge_mc_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "District Judge (MC)",
                               appointmentType in ("Salaried", "SPTW"),
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW District Judge (MC)-Salaried")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_district_judge_mc_salaried_joh");
end;

/*
 * "PRIVATELAW High Court Judge - Sitting in Retirement-Fee-Paid" business role mapping to JOH.
 */
rule "privatelaw_high_court_judge_sitting_in_retirement_fee_paid_joh"
when
   $f:  FeatureFlag(status && flagName == FeatureFlagEnum.PRIVATELAW_WA_1_0.getValue())
   $jap: JudicialAccessProfile(appointment == "High Court Judge- Sitting in Retirement",
                               appointmentType == "Fee Paid",
                               (endTime == null || endTime.compareTo(ZonedDateTime.now()) >= 0),
                               validateAuthorisation(authorisations, "ABA5"))
then
  insert(
      JudicialOfficeHolder.builder()
      .userId($jap.getUserId())
      .office("PRIVATELAW High Court Judge - Sitting in Retirement-Fee-Paid")
      .jurisdiction("PRIVATELAW")
      .ticketCodes($jap.getTicketCodes())
      .beginTime($jap.getBeginTime())
      .endTime($jap.getEndTime())
      .regionId($jap.getRegionId())
      .baseLocationId($jap.getBaseLocationId())
      .primaryLocation($jap.getPrimaryLocationId())
      .contractType($jap.getAppointmentType())
      .build());
      logMsg("Rule : privatelaw_high_court_judge_sitting_in_retirement_fee_paid_joh");
end;